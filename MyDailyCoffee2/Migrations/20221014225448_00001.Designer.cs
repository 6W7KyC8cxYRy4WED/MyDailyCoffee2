// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyDailyCoffee2.Model;

#nullable disable

namespace MyDailyCoffee2.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221014225448_00001")]
    partial class _00001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyDailyCoffee2.Model.AzureUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("AzureUsers");
                });

            modelBuilder.Entity("MyDailyCoffee2.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastnames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MyDailyCoffee2.Model.CustomerPhoneNumber", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerPhoneNumbers");
                });

            modelBuilder.Entity("MyDailyCoffee2.Model.MaterialMeasurement", b =>
                {
                    b.Property<string>("LowerCaseName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaterialMeasurementTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LowerCaseName");

                    b.HasIndex("MaterialMeasurementTypeName");

                    b.ToTable("MaterialMeasurements");
                });

            modelBuilder.Entity("MyDailyCoffee2.Model.MaterialMeasurementType", b =>
                {
                    b.Property<string>("LowerCaseName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DecimalQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LowerCaseName");

                    b.ToTable("MaterialMeasurementTypes");
                });

            modelBuilder.Entity("MyDailyCoffee2.Model.Customer", b =>
                {
                    b.HasOne("MyDailyCoffee2.Model.AzureUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MyDailyCoffee2.Model.AzureUser", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MyDailyCoffee2.Model.CustomerPhoneNumber", b =>
                {
                    b.HasOne("MyDailyCoffee2.Model.Customer", "Customer")
                        .WithMany("CustomerPhoneNumbers")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MyDailyCoffee2.Model.MaterialMeasurement", b =>
                {
                    b.HasOne("MyDailyCoffee2.Model.MaterialMeasurementType", "MaterialMeasurementType")
                        .WithMany()
                        .HasForeignKey("MaterialMeasurementTypeName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialMeasurementType");
                });

            modelBuilder.Entity("MyDailyCoffee2.Model.Customer", b =>
                {
                    b.Navigation("CustomerPhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
