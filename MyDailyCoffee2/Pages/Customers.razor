@page "/customers/"

@using Model
@using Microsoft.EntityFrameworkCore
@using System.Linq.Dynamic.Core

@inject IDbContextFactory<DatabaseContext> DbFactory

<h3>Customers</h3>

<RadzenDataGrid Data="@customers" Count="@count" LoadData="@LoadCustomers" TItem="Model.Customer" AllowVirtualization="true" Style="height:400px"
                AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowSorting="true">
    <Columns>
        <RadzenDataGridColumn TItem="Model.Customer" Property="Names" Title="Nombre(s)" />
        <RadzenDataGridColumn TItem="Model.Customer" Property="Lastnames" Title="Apellido(s)" />
    </Columns>
</RadzenDataGrid>

@code {

    private IEnumerable<Model.Customer>? customers;

    private DatabaseContext databaseContext;

    private int count;

    protected override void OnInitialized()
    {
        databaseContext = DbFactory.CreateDbContext();
    }

    private void LoadCustomers(LoadDataArgs loadDataArgs)
    {
        IQueryable<Model.Customer> query = databaseContext.Customers.Where(c => !c.Deleted).AsQueryable();
        customers = query.Skip(loadDataArgs.Skip.Value).Take(loadDataArgs.Top.Value).ToList();
        count = databaseContext.Customers.Count();
    }
}
